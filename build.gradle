group 'org.tron'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
mainClassName = "org.tron.program.GenerateAccountTool"

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
    }
}


dependencies {
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile "org.projectlombok:lombok:1.16.18"
    compile group: 'net.jcip', name: 'jcip-annotations', version: '1.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile "org.projectlombok:lombok:1.16.18"

    compile "com.madgag.spongycastle:core:1.53.0.0"
    compile "com.madgag.spongycastle:prov:1.53.0.0"

    compile "com.google.code.findbugs:jsr305:3.0.0"

    compile "org.apache.commons:commons-collections4:4.0"
    compile "org.apache.commons:commons-lang3:3.4"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

if (project.hasProperty("mainClass")) {
    mainClassName = mainClass
}

def binaryRelease(taskName, jarName, mainClass) {
    return tasks.create("${taskName}", Jar) {
        baseName = jarName
        version = null
        from(sourceSets.main.output) {
            include "/**"
        }

        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

        manifest {
            attributes "Main-Class": "${mainClass}"
        }
    }
}

artifacts {
    archives(binaryRelease('buildGenerateAccountTool', 'GenerateAccountTool', 'org.tron.program.GenerateAccountTool'),
            binaryRelease('buildGenerateAccountToolGUI', 'GenerateAccountToolGUI', 'org.tron.gui.GenerateAccountToolGUI'))
}